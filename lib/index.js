// Generated by CoffeeScript 1.10.0
(function() {
  var es, seneca;

  es = require('elasticsearch');

  seneca = require('seneca')();

  module.exports = function(options) {
    var _addOrUpdate, _remove, esClient, indexName, pluginName;
    pluginName = 'search';
    indexName = 'searched';
    esClient = null;
    this.add({
      init: pluginName
    }, function(args, done) {
      console.log("Connecting to Elastic Search");
      esClient = new es.Client({
        host: "search-edapp-yphya7va753klaq5zqo2re5mze.ap-southeast-2.es.amazonaws.com"
      });
      return esClient.ping({
        requestTimeout: Infinity
      }, function(err) {
        return done(err);
      });
    });
    _remove = function(arg, done) {
      var id, type;
      type = arg.type, id = arg.id;
      return esClient["delete"]({
        index: indexName,
        type: type,
        id: id
      }, function(err, resp) {
        console.error(err, resp);
        return done(err, {});
      });
    };
    _addOrUpdate = function(arg, done) {
      var doc, id, type;
      type = arg.type, id = arg.id, doc = arg.doc;
      return esClient.update({
        index: indexName,
        type: type,
        id: id,
        body: {
          doc: doc,
          upsert: doc
        }
      }, function(err, resp) {
        if (err != null) {
          console.error(err);
        }
        console.error(resp);
        return done(err, {});
      });
    };
    this.add({
      cmd: 'update',
      type: 'course'
    }, function(args, done) {
      return _addOrUpdate({
        type: 'course',
        id: args.id,
        doc: args.doc
      }, done);
    });
    this.add({
      cmd: 'update',
      type: 'lesson'
    }, function(args, done) {
      return _addOrUpdate({
        type: 'lesson',
        id: args.id,
        doc: args.doc
      }, done);
    });
    this.add({
      cmd: 'delete'
    }, function(args, done) {
      return _remove({
        type: args.type,
        id: args.id
      }, done);
    });
    return {
      name: pluginName
    };
  };

}).call(this);
